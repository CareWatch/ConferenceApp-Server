#!/usr/bin/env node

var app = require('../app');
var config = require('../configuration');
var http = require('http');
var https = require('https');

var port = config.port;

var server = http.createServer(app);
/*
var server = https.createServer({
  ca: config.sslCa,
  key: config.sslKey,
  cert: config.sslCert,
  passphrase: config.sslPassphrase
}, app);

http.createServer(function (req, res) {
 res.writeHead(301, { "Location": "https://" + req.headers['host'] + req.url });
 res.end();
}).listen(config.port);

*/
server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
