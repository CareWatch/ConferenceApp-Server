#!/usr/bin/env node

var app = require('../app');
var config = require('../configuration');
var debug = require('debug')('ConferenceApp-Server:server');
var http = require('http');

var port = config.port;
//app.set('port', port);


var server = http.createServer(app);

/*
 https.createServer(config.sslConfiguration, app).listen(config.sslPort), function () {
 console.log('Server is online and running!');
 };

 http.createServer(function (req, res) {
 res.writeHead(301, { "Location": "https://" + req.headers['host'] + req.url });
 res.end();
 }).listen(config.port);
*/

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
